"use strict";(self.webpackChunkblockchain_protocols_and_distributed_applications=self.webpackChunkblockchain_protocols_and_distributed_applications||[]).push([[6041],{1913:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(8168),a=(n(6540),n(5680));const o={},i="Transactions",s={unversionedId:"Practical Sessions/Basic Peer-to-Peer Blockchain (Extra)/transactions",id:"Practical Sessions/Basic Peer-to-Peer Blockchain (Extra)/transactions",title:"Transactions",description:"So we have a wallet we know how a transaction looks lets send a transaction to another address in the blockchain.",source:"@site/docs/Practical Sessions/Basic Peer-to-Peer Blockchain (Extra)/transactions.md",sourceDirName:"Practical Sessions/Basic Peer-to-Peer Blockchain (Extra)",slug:"/Practical Sessions/Basic Peer-to-Peer Blockchain (Extra)/transactions",permalink:"/blockchain-summer-school/Practical Sessions/Basic Peer-to-Peer Blockchain (Extra)/transactions",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Basic Wallet",permalink:"/blockchain-summer-school/Practical Sessions/Basic Peer-to-Peer Blockchain (Extra)/basic_wallet"},next:{title:"Sources",permalink:"/blockchain-summer-school/Practical Sessions/Basic Peer-to-Peer Blockchain (Extra)/sources"}},c={},l=[],u={toc:l},p="wrapper";function d({components:e,...t}){return(0,a.yg)(p,(0,r.A)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"transactions"},"Transactions"),(0,a.yg)("p",null,"So we have a wallet we know how a transaction looks lets send a transaction to another address in the blockchain."),(0,a.yg)("p",null,"First we need to know the address where we want to send the coins."),(0,a.yg)("p",null,"This is the format of a transaction."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"\n//transaction struct\ntype Transaction struct {\n BlockNumber int\n Time        int64\n Hash        string\n Inputs      []TxInput\n Outputs     []TxOutput\n}\n\ntype TxInput struct {\n Txid      int64\n Value     int64\n Signature string\n PubKey    string\n}\n\ntype TxOutput struct {\n Txid       int64\n Value      int64\n PubKeyHash string\n Signature  string\n}\n\n")),(0,a.yg)("p",null,"After we send the transaction from our node, the data will be sent across the network to all the nodes, now the nodes will start to validate the transaction(what means to validate the transaction? \u2014 first to check that input money are valid by verify the signature of the one that send money to the person that is sending towards you."),(0,a.yg)("p",null,"If a transaction is invalid the node will not send the transaction further in the network and will send a message to the node that send the invalid transaction that the transaction is invalid."),(0,a.yg)("p",null,"But if the transaction is valid will be send further to the other nodes and stored in a mempool until\u2026a node will chose to mine a block and to add the transaction into the blockchain."))}d.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>f});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),h=a,f=p["".concat(c,".").concat(h)]||p[h]||d[h]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);